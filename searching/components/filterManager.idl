/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is DownThemAll! Filter Manager.
 *
 * The Initial Developer of the Original Code is Nils Maier
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Nils Maier <MaierMan@web.de>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsISimpleEnumerator.idl"

[scriptable, uuid(3F872ADC-35A4-4c79-B771-F2BC130FB792)]
interface dtaIFilter : nsISupports
{
	const unsigned long LINK_FILTER  = 1<<0;
	const unsigned long IMAGE_FILTER = 1<<1;

	[readonly] attribute string id;
	[readonly] attribute boolean defFilter;
	attribute wstring label;
	attribute wstring test;
	attribute boolean isRegex;
	attribute boolean active;
	attribute unsigned long type;
	boolean match(in wstring test);
	void save();
	void restore();
	void remove();
};

[scriptable, uuid(3F872ADC-35A4-4c79-B771-F2BC130FB791)]
interface dtaIFilterManager : nsISupports
{
	[readonly] attribute unsigned long count;
	
  void reload();
	
	nsISimpleEnumerator enumAll();
	nsISimpleEnumerator enumActive(in unsigned long type);
	dtaIFilter getFilter(in string id);
	
	boolean matchActive(in wstring test, in unsigned long type);
	
	string create(in wstring label, in wstring test, in boolean active, in unsigned long type, in boolean regex);
	void remove(in string id);
	
	void save();
}; 